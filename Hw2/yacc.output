Grammar

    0 $accept: program $end

    1 program: decl_and_def_list

    2 decl_and_def_list: declaration_list decl_and_def_list_append
    3                  | definition_list decl_and_def_list_append

    4 decl_and_def_list_append: decl_and_def_list
    5                         | %empty

    6 declaration_list: const_decl
    7                 | var_decl
    8                 | funct_decl

    9 funct_decl: type identifier L_PAREN arguments R_PAREN SEMICOLON
   10           | VOID identifier L_PAREN arguments R_PAREN SEMICOLON

   11 arguments: type identifier arguments_append
   12          | type array arguments_append
   13          | %empty

   14 arguments_append: COMMA arguments
   15                 | %empty

   16 definition_list: type identifier L_PAREN arguments R_PAREN compound
   17                | VOID identifier L_PAREN arguments R_PAREN compound

   18 var_decl: type identifier_list SEMICOLON

   19 type: INT
   20     | DOUBLE
   21     | FLOAT
   22     | STRING
   23     | BOOL

   24 identifier_list: identifier var_assign identifier_list_append
   25                | array arr_assign identifier_list_append

   26 identifier_list_append: COMMA identifier_list
   27                       | %empty

   28 var_assign: EQUAL expression
   29           | %empty

   30 identifier: ID

   31 array: ID arr_size_list

   32 arr_size_list: arr_size
   33              | arr_size arr_size_list

   34 arr_size: L_SQUARE INT_CONST R_SQUARE

   35 arr_assign: EQUAL initial_array
   36           | %empty

   37 initial_array: L_CURLY expression_list R_CURLY

   38 expression_list: expression expression_list_append
   39                | %empty

   40 expression_list_append: COMMA expression expression_list_append
   41                       | %empty

   42 const_decl: CONST type const_list SEMICOLON

   43 const_list: identifier EQUAL literal_const const_list_append

   44 const_list_append: COMMA const_list
   45                  | %empty

   46 literal_const: INT_CONST
   47              | FLOAT_CONST
   48              | DOUBLE_CONST
   49              | STRING_CONST
   50              | BOOL_CONST

   51 statement: compound
   52          | simple
   53          | conditional
   54          | while
   55          | for
   56          | jump
   57          | procedure

   58 compound: L_CURLY compound_content R_CURLY

   59 compound_content: var_decl compound_content
   60                 | const_decl compound_content
   61                 | statement compound_content
   62                 | %empty

   63 simple: variable_reference EQUAL expression SEMICOLON
   64       | PRINT expression SEMICOLON
   65       | READ variable_reference SEMICOLON

   66 variable_reference: identifier
   67                   | array_ref

   68 array_ref: identifier array_ref_idx

   69 array_ref_idx: L_SQUARE expression R_SQUARE array_ref_idx_append

   70 array_ref_idx_append: array_ref_idx
   71                     | %empty

   72 expression: literal_const
   73           | variable_reference
   74           | MINUS expression
   75           | expression MULT expression
   76           | expression DIV expression
   77           | expression MOD expression
   78           | expression PLUS expression
   79           | expression MINUS expression
   80           | expression ST expression
   81           | expression SE expression
   82           | expression EQ expression
   83           | expression GE expression
   84           | expression GT expression
   85           | expression NEQ expression
   86           | expression NOT expression
   87           | expression AND expression
   88           | expression OR expression
   89           | L_PAREN expression R_PAREN

   90 conditional: conditional_pair
   91            | conditional_single

   92 conditional_pair: IF L_PAREN expression R_PAREN compound ELSE compound

   93 conditional_single: IF L_PAREN expression R_PAREN compound

   94 while: single_while
   95      | do_while

   96 single_while: WHILE L_PAREN expression R_PAREN compound

   97 do_while: DO compound WHILE L_PAREN expression R_PAREN SEMICOLON

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN compound

   99 for_init_expr: expression
  100              | expression EQUAL expression
  101              | %empty

  102 for_control_expr: expression
  103                 | expression EQUAL expression
  104                 | %empty

  105 for_incre_expr: expression
  106               | expression EQUAL expression
  107               | %empty

  108 jump: RETURN expression SEMICOLON
  109     | BREAK SEMICOLON
  110     | CONTINUE SEMICOLON

  111 procedure: identifier L_PAREN expression_list R_PAREN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
SEMICOLON (258) 9 10 18 42 63 64 65 97 98 108 109 110 111
COMMA (259) 14 26 40 44
ID (260) 30 31
VOID (261) 10 17
INT (262) 19
DOUBLE (263) 20
FLOAT (264) 21
STRING (265) 22
BOOL (266) 23
EQUAL (267) 28 35 43 63 100 103 106
CONST (268) 42
PRINT (269) 64
READ (270) 65
IF (271) 92 93
ELSE (272) 92
WHILE (273) 96 97
DO (274) 97
FOR (275) 98
RETURN (276) 108
BREAK (277) 109
CONTINUE (278) 110
INT_CONST (279) 34 46
FLOAT_CONST (280) 47
DOUBLE_CONST (281) 48
STRING_CONST (282) 49
BOOL_CONST (283) 50
L_CURLY (284) 37 58
R_CURLY (285) 37 58
L_SQUARE (286) 34 69
R_SQUARE (287) 34 69
L_PAREN (288) 9 10 16 17 89 92 93 96 97 98 111
R_PAREN (289) 9 10 16 17 89 92 93 96 97 98 111
MULT (290) 75
DIV (291) 76
MOD (292) 77
PLUS (293) 78
MINUS (294) 74 79
ST (295) 80
SE (296) 81
EQ (297) 82
GE (298) 83
GT (299) 84
NEQ (300) 85
NOT (301) 86
AND (302) 87
OR (303) 88


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
decl_and_def_list (51)
    on left: 2 3, on right: 1 4
decl_and_def_list_append (52)
    on left: 4 5, on right: 2 3
declaration_list (53)
    on left: 6 7 8, on right: 2
funct_decl (54)
    on left: 9 10, on right: 8
arguments (55)
    on left: 11 12 13, on right: 9 10 14 16 17
arguments_append (56)
    on left: 14 15, on right: 11 12
definition_list (57)
    on left: 16 17, on right: 3
var_decl (58)
    on left: 18, on right: 7 59
type (59)
    on left: 19 20 21 22 23, on right: 9 11 12 16 18 42
identifier_list (60)
    on left: 24 25, on right: 18 26
identifier_list_append (61)
    on left: 26 27, on right: 24 25
var_assign (62)
    on left: 28 29, on right: 24
identifier (63)
    on left: 30, on right: 9 10 11 16 17 24 43 66 68 111
array (64)
    on left: 31, on right: 12 25
arr_size_list (65)
    on left: 32 33, on right: 31 33
arr_size (66)
    on left: 34, on right: 32 33
arr_assign (67)
    on left: 35 36, on right: 25
initial_array (68)
    on left: 37, on right: 35
expression_list (69)
    on left: 38 39, on right: 37 111
expression_list_append (70)
    on left: 40 41, on right: 38 40
const_decl (71)
    on left: 42, on right: 6 60
const_list (72)
    on left: 43, on right: 42 44
const_list_append (73)
    on left: 44 45, on right: 43
literal_const (74)
    on left: 46 47 48 49 50, on right: 43 72
statement (75)
    on left: 51 52 53 54 55 56 57, on right: 61
compound (76)
    on left: 58, on right: 16 17 51 92 93 96 97 98
compound_content (77)
    on left: 59 60 61 62, on right: 58 59 60 61
simple (78)
    on left: 63 64 65, on right: 52
variable_reference (79)
    on left: 66 67, on right: 63 65 73
array_ref (80)
    on left: 68, on right: 67
array_ref_idx (81)
    on left: 69, on right: 68 70
array_ref_idx_append (82)
    on left: 70 71, on right: 69
expression (83)
    on left: 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89,
    on right: 28 38 40 63 64 69 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 92 93 96 97 99 100 102 103 105 106 108
conditional (84)
    on left: 90 91, on right: 53
conditional_pair (85)
    on left: 92, on right: 90
conditional_single (86)
    on left: 93, on right: 91
while (87)
    on left: 94 95, on right: 54
single_while (88)
    on left: 96, on right: 94
do_while (89)
    on left: 97, on right: 95
for (90)
    on left: 98, on right: 55
for_init_expr (91)
    on left: 99 100 101, on right: 98
for_control_expr (92)
    on left: 102 103 104, on right: 98
for_incre_expr (93)
    on left: 105 106 107, on right: 98
jump (94)
    on left: 108 109 110, on right: 56
procedure (95)
    on left: 111, on right: 57


State 0

    0 $accept: . program $end

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 7

    program            go to state 8
    decl_and_def_list  go to state 9
    declaration_list   go to state 10
    funct_decl         go to state 11
    definition_list    go to state 12
    var_decl           go to state 13
    type               go to state 14
    const_decl         go to state 15


State 1

   10 funct_decl: VOID . identifier L_PAREN arguments R_PAREN SEMICOLON
   17 definition_list: VOID . identifier L_PAREN arguments R_PAREN compound

    ID  shift, and go to state 16

    identifier  go to state 17


State 2

   19 type: INT .

    $default  reduce using rule 19 (type)


State 3

   20 type: DOUBLE .

    $default  reduce using rule 20 (type)


State 4

   21 type: FLOAT .

    $default  reduce using rule 21 (type)


State 5

   22 type: STRING .

    $default  reduce using rule 22 (type)


State 6

   23 type: BOOL .

    $default  reduce using rule 23 (type)


State 7

   42 const_decl: CONST . type const_list SEMICOLON

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6

    type  go to state 18


State 8

    0 $accept: program . $end

    $end  shift, and go to state 19


State 9

    1 program: decl_and_def_list .

    $default  reduce using rule 1 (program)


State 10

    2 decl_and_def_list: declaration_list . decl_and_def_list_append

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 7

    $default  reduce using rule 5 (decl_and_def_list_append)

    decl_and_def_list         go to state 20
    decl_and_def_list_append  go to state 21
    declaration_list          go to state 10
    funct_decl                go to state 11
    definition_list           go to state 12
    var_decl                  go to state 13
    type                      go to state 14
    const_decl                go to state 15


State 11

    8 declaration_list: funct_decl .

    $default  reduce using rule 8 (declaration_list)


State 12

    3 decl_and_def_list: definition_list . decl_and_def_list_append

    VOID    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6
    CONST   shift, and go to state 7

    $default  reduce using rule 5 (decl_and_def_list_append)

    decl_and_def_list         go to state 20
    decl_and_def_list_append  go to state 22
    declaration_list          go to state 10
    funct_decl                go to state 11
    definition_list           go to state 12
    var_decl                  go to state 13
    type                      go to state 14
    const_decl                go to state 15


State 13

    7 declaration_list: var_decl .

    $default  reduce using rule 7 (declaration_list)


State 14

    9 funct_decl: type . identifier L_PAREN arguments R_PAREN SEMICOLON
   16 definition_list: type . identifier L_PAREN arguments R_PAREN compound
   18 var_decl: type . identifier_list SEMICOLON

    ID  shift, and go to state 23

    identifier_list  go to state 24
    identifier       go to state 25
    array            go to state 26


State 15

    6 declaration_list: const_decl .

    $default  reduce using rule 6 (declaration_list)


State 16

   30 identifier: ID .

    $default  reduce using rule 30 (identifier)


State 17

   10 funct_decl: VOID identifier . L_PAREN arguments R_PAREN SEMICOLON
   17 definition_list: VOID identifier . L_PAREN arguments R_PAREN compound

    L_PAREN  shift, and go to state 27


State 18

   42 const_decl: CONST type . const_list SEMICOLON

    ID  shift, and go to state 16

    identifier  go to state 28
    const_list  go to state 29


State 19

    0 $accept: program $end .

    $default  accept


State 20

    4 decl_and_def_list_append: decl_and_def_list .

    $default  reduce using rule 4 (decl_and_def_list_append)


State 21

    2 decl_and_def_list: declaration_list decl_and_def_list_append .

    $default  reduce using rule 2 (decl_and_def_list)


State 22

    3 decl_and_def_list: definition_list decl_and_def_list_append .

    $default  reduce using rule 3 (decl_and_def_list)


State 23

   30 identifier: ID .
   31 array: ID . arr_size_list

    L_SQUARE  shift, and go to state 30

    $default  reduce using rule 30 (identifier)

    arr_size_list  go to state 31
    arr_size       go to state 32


State 24

   18 var_decl: type identifier_list . SEMICOLON

    SEMICOLON  shift, and go to state 33


State 25

    9 funct_decl: type identifier . L_PAREN arguments R_PAREN SEMICOLON
   16 definition_list: type identifier . L_PAREN arguments R_PAREN compound
   24 identifier_list: identifier . var_assign identifier_list_append

    EQUAL    shift, and go to state 34
    L_PAREN  shift, and go to state 35

    $default  reduce using rule 29 (var_assign)

    var_assign  go to state 36


State 26

   25 identifier_list: array . arr_assign identifier_list_append

    EQUAL  shift, and go to state 37

    $default  reduce using rule 36 (arr_assign)

    arr_assign  go to state 38


State 27

   10 funct_decl: VOID identifier L_PAREN . arguments R_PAREN SEMICOLON
   17 definition_list: VOID identifier L_PAREN . arguments R_PAREN compound

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 13 (arguments)

    arguments  go to state 39
    type       go to state 40


State 28

   43 const_list: identifier . EQUAL literal_const const_list_append

    EQUAL  shift, and go to state 41


State 29

   42 const_decl: CONST type const_list . SEMICOLON

    SEMICOLON  shift, and go to state 42


State 30

   34 arr_size: L_SQUARE . INT_CONST R_SQUARE

    INT_CONST  shift, and go to state 43


State 31

   31 array: ID arr_size_list .

    $default  reduce using rule 31 (array)


State 32

   32 arr_size_list: arr_size .
   33              | arr_size . arr_size_list

    L_SQUARE  shift, and go to state 30

    $default  reduce using rule 32 (arr_size_list)

    arr_size_list  go to state 44
    arr_size       go to state 32


State 33

   18 var_decl: type identifier_list SEMICOLON .

    $default  reduce using rule 18 (var_decl)


State 34

   28 var_assign: EQUAL . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 56


State 35

    9 funct_decl: type identifier L_PAREN . arguments R_PAREN SEMICOLON
   16 definition_list: type identifier L_PAREN . arguments R_PAREN compound

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 13 (arguments)

    arguments  go to state 57
    type       go to state 40


State 36

   24 identifier_list: identifier var_assign . identifier_list_append

    COMMA  shift, and go to state 58

    $default  reduce using rule 27 (identifier_list_append)

    identifier_list_append  go to state 59


State 37

   35 arr_assign: EQUAL . initial_array

    L_CURLY  shift, and go to state 60

    initial_array  go to state 61


State 38

   25 identifier_list: array arr_assign . identifier_list_append

    COMMA  shift, and go to state 58

    $default  reduce using rule 27 (identifier_list_append)

    identifier_list_append  go to state 62


State 39

   10 funct_decl: VOID identifier L_PAREN arguments . R_PAREN SEMICOLON
   17 definition_list: VOID identifier L_PAREN arguments . R_PAREN compound

    R_PAREN  shift, and go to state 63


State 40

   11 arguments: type . identifier arguments_append
   12          | type . array arguments_append

    ID  shift, and go to state 23

    identifier  go to state 64
    array       go to state 65


State 41

   43 const_list: identifier EQUAL . literal_const const_list_append

    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49

    literal_const  go to state 66


State 42

   42 const_decl: CONST type const_list SEMICOLON .

    $default  reduce using rule 42 (const_decl)


State 43

   34 arr_size: L_SQUARE INT_CONST . R_SQUARE

    R_SQUARE  shift, and go to state 67


State 44

   33 arr_size_list: arr_size arr_size_list .

    $default  reduce using rule 33 (arr_size_list)


State 45

   46 literal_const: INT_CONST .

    $default  reduce using rule 46 (literal_const)


State 46

   47 literal_const: FLOAT_CONST .

    $default  reduce using rule 47 (literal_const)


State 47

   48 literal_const: DOUBLE_CONST .

    $default  reduce using rule 48 (literal_const)


State 48

   49 literal_const: STRING_CONST .

    $default  reduce using rule 49 (literal_const)


State 49

   50 literal_const: BOOL_CONST .

    $default  reduce using rule 50 (literal_const)


State 50

   89 expression: L_PAREN . expression R_PAREN

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 68


State 51

   74 expression: MINUS . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 69


State 52

   66 variable_reference: identifier .
   68 array_ref: identifier . array_ref_idx

    L_SQUARE  shift, and go to state 70

    $default  reduce using rule 66 (variable_reference)

    array_ref_idx  go to state 71


State 53

   72 expression: literal_const .

    $default  reduce using rule 72 (expression)


State 54

   73 expression: variable_reference .

    $default  reduce using rule 73 (expression)


State 55

   67 variable_reference: array_ref .

    $default  reduce using rule 67 (variable_reference)


State 56

   28 var_assign: EQUAL expression .
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 28 (var_assign)


State 57

    9 funct_decl: type identifier L_PAREN arguments . R_PAREN SEMICOLON
   16 definition_list: type identifier L_PAREN arguments . R_PAREN compound

    R_PAREN  shift, and go to state 86


State 58

   26 identifier_list_append: COMMA . identifier_list

    ID  shift, and go to state 23

    identifier_list  go to state 87
    identifier       go to state 88
    array            go to state 26


State 59

   24 identifier_list: identifier var_assign identifier_list_append .

    $default  reduce using rule 24 (identifier_list)


State 60

   37 initial_array: L_CURLY . expression_list R_CURLY

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    $default  reduce using rule 39 (expression_list)

    identifier          go to state 52
    expression_list     go to state 89
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 90


State 61

   35 arr_assign: EQUAL initial_array .

    $default  reduce using rule 35 (arr_assign)


State 62

   25 identifier_list: array arr_assign identifier_list_append .

    $default  reduce using rule 25 (identifier_list)


State 63

   10 funct_decl: VOID identifier L_PAREN arguments R_PAREN . SEMICOLON
   17 definition_list: VOID identifier L_PAREN arguments R_PAREN . compound

    SEMICOLON  shift, and go to state 91
    L_CURLY    shift, and go to state 92

    compound  go to state 93


State 64

   11 arguments: type identifier . arguments_append

    COMMA  shift, and go to state 94

    $default  reduce using rule 15 (arguments_append)

    arguments_append  go to state 95


State 65

   12 arguments: type array . arguments_append

    COMMA  shift, and go to state 94

    $default  reduce using rule 15 (arguments_append)

    arguments_append  go to state 96


State 66

   43 const_list: identifier EQUAL literal_const . const_list_append

    COMMA  shift, and go to state 97

    $default  reduce using rule 45 (const_list_append)

    const_list_append  go to state 98


State 67

   34 arr_size: L_SQUARE INT_CONST R_SQUARE .

    $default  reduce using rule 34 (arr_size)


State 68

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   89           | L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99
    MULT     shift, and go to state 72
    DIV      shift, and go to state 73
    MOD      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    ST       shift, and go to state 77
    SE       shift, and go to state 78
    EQ       shift, and go to state 79
    GE       shift, and go to state 80
    GT       shift, and go to state 81
    NEQ      shift, and go to state 82
    NOT      shift, and go to state 83
    AND      shift, and go to state 84
    OR       shift, and go to state 85


State 69

   74 expression: MINUS expression .
   75           | expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    ST   shift, and go to state 77
    SE   shift, and go to state 78
    EQ   shift, and go to state 79
    GE   shift, and go to state 80
    GT   shift, and go to state 81
    NEQ  shift, and go to state 82
    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 74 (expression)


State 70

   69 array_ref_idx: L_SQUARE . expression R_SQUARE array_ref_idx_append

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 100


State 71

   68 array_ref: identifier array_ref_idx .

    $default  reduce using rule 68 (array_ref)


State 72

   75 expression: expression MULT . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 101


State 73

   76 expression: expression DIV . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 102


State 74

   77 expression: expression MOD . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 103


State 75

   78 expression: expression PLUS . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 104


State 76

   79 expression: expression MINUS . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 105


State 77

   80 expression: expression ST . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 106


State 78

   81 expression: expression SE . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 107


State 79

   82 expression: expression EQ . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 108


State 80

   83 expression: expression GE . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 109


State 81

   84 expression: expression GT . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 110


State 82

   85 expression: expression NEQ . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 111


State 83

   86 expression: expression NOT . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 112


State 84

   87 expression: expression AND . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 113


State 85

   88 expression: expression OR . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 114


State 86

    9 funct_decl: type identifier L_PAREN arguments R_PAREN . SEMICOLON
   16 definition_list: type identifier L_PAREN arguments R_PAREN . compound

    SEMICOLON  shift, and go to state 115
    L_CURLY    shift, and go to state 92

    compound  go to state 116


State 87

   26 identifier_list_append: COMMA identifier_list .

    $default  reduce using rule 26 (identifier_list_append)


State 88

   24 identifier_list: identifier . var_assign identifier_list_append

    EQUAL  shift, and go to state 34

    $default  reduce using rule 29 (var_assign)

    var_assign  go to state 36


State 89

   37 initial_array: L_CURLY expression_list . R_CURLY

    R_CURLY  shift, and go to state 117


State 90

   38 expression_list: expression . expression_list_append
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    COMMA  shift, and go to state 118
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 41 (expression_list_append)

    expression_list_append  go to state 119


State 91

   10 funct_decl: VOID identifier L_PAREN arguments R_PAREN SEMICOLON .

    $default  reduce using rule 10 (funct_decl)


State 92

   58 compound: L_CURLY . compound_content R_CURLY

    ID        shift, and go to state 16
    INT       shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    CONST     shift, and go to state 7
    PRINT     shift, and go to state 120
    READ      shift, and go to state 121
    IF        shift, and go to state 122
    WHILE     shift, and go to state 123
    DO        shift, and go to state 124
    FOR       shift, and go to state 125
    RETURN    shift, and go to state 126
    BREAK     shift, and go to state 127
    CONTINUE  shift, and go to state 128
    L_CURLY   shift, and go to state 92

    $default  reduce using rule 62 (compound_content)

    var_decl            go to state 129
    type                go to state 130
    identifier          go to state 131
    const_decl          go to state 132
    statement           go to state 133
    compound            go to state 134
    compound_content    go to state 135
    simple              go to state 136
    variable_reference  go to state 137
    array_ref           go to state 55
    conditional         go to state 138
    conditional_pair    go to state 139
    conditional_single  go to state 140
    while               go to state 141
    single_while        go to state 142
    do_while            go to state 143
    for                 go to state 144
    jump                go to state 145
    procedure           go to state 146


State 93

   17 definition_list: VOID identifier L_PAREN arguments R_PAREN compound .

    $default  reduce using rule 17 (definition_list)


State 94

   14 arguments_append: COMMA . arguments

    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    FLOAT   shift, and go to state 4
    STRING  shift, and go to state 5
    BOOL    shift, and go to state 6

    $default  reduce using rule 13 (arguments)

    arguments  go to state 147
    type       go to state 40


State 95

   11 arguments: type identifier arguments_append .

    $default  reduce using rule 11 (arguments)


State 96

   12 arguments: type array arguments_append .

    $default  reduce using rule 12 (arguments)


State 97

   44 const_list_append: COMMA . const_list

    ID  shift, and go to state 16

    identifier  go to state 28
    const_list  go to state 148


State 98

   43 const_list: identifier EQUAL literal_const const_list_append .

    $default  reduce using rule 43 (const_list)


State 99

   89 expression: L_PAREN expression R_PAREN .

    $default  reduce using rule 89 (expression)


State 100

   69 array_ref_idx: L_SQUARE expression . R_SQUARE array_ref_idx_append
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    R_SQUARE  shift, and go to state 149
    MULT      shift, and go to state 72
    DIV       shift, and go to state 73
    MOD       shift, and go to state 74
    PLUS      shift, and go to state 75
    MINUS     shift, and go to state 76
    ST        shift, and go to state 77
    SE        shift, and go to state 78
    EQ        shift, and go to state 79
    GE        shift, and go to state 80
    GT        shift, and go to state 81
    NEQ       shift, and go to state 82
    NOT       shift, and go to state 83
    AND       shift, and go to state 84
    OR        shift, and go to state 85


State 101

   75 expression: expression . MULT expression
   75           | expression MULT expression .
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 75 (expression)


State 102

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   76           | expression DIV expression .
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 76 (expression)


State 103

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   77           | expression MOD expression .
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 77 (expression)


State 104

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   78           | expression PLUS expression .
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    ST   shift, and go to state 77
    SE   shift, and go to state 78
    EQ   shift, and go to state 79
    GE   shift, and go to state 80
    GT   shift, and go to state 81
    NEQ  shift, and go to state 82
    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 78 (expression)


State 105

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   79           | expression MINUS expression .
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    ST   shift, and go to state 77
    SE   shift, and go to state 78
    EQ   shift, and go to state 79
    GE   shift, and go to state 80
    GT   shift, and go to state 81
    NEQ  shift, and go to state 82
    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 79 (expression)


State 106

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   80           | expression ST expression .
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 80 (expression)


State 107

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   81           | expression SE expression .
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 81 (expression)


State 108

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   82           | expression EQ expression .
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 82 (expression)


State 109

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   83           | expression GE expression .
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 83 (expression)


State 110

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   84           | expression GT expression .
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 84 (expression)


State 111

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   85           | expression NEQ expression .
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 85 (expression)


State 112

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   86           | expression NOT expression .
   87           | expression . AND expression
   88           | expression . OR expression

    NOT  shift, and go to state 83
    AND  shift, and go to state 84
    OR   shift, and go to state 85

    $default  reduce using rule 86 (expression)


State 113

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   87           | expression AND expression .
   88           | expression . OR expression

    OR  shift, and go to state 85

    $default  reduce using rule 87 (expression)


State 114

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   88           | expression OR expression .

    $default  reduce using rule 88 (expression)


State 115

    9 funct_decl: type identifier L_PAREN arguments R_PAREN SEMICOLON .

    $default  reduce using rule 9 (funct_decl)


State 116

   16 definition_list: type identifier L_PAREN arguments R_PAREN compound .

    $default  reduce using rule 16 (definition_list)


State 117

   37 initial_array: L_CURLY expression_list R_CURLY .

    $default  reduce using rule 37 (initial_array)


State 118

   40 expression_list_append: COMMA . expression expression_list_append

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 150


State 119

   38 expression_list: expression expression_list_append .

    $default  reduce using rule 38 (expression_list)


State 120

   64 simple: PRINT . expression SEMICOLON

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 151


State 121

   65 simple: READ . variable_reference SEMICOLON

    ID  shift, and go to state 16

    identifier          go to state 52
    variable_reference  go to state 152
    array_ref           go to state 55


State 122

   92 conditional_pair: IF . L_PAREN expression R_PAREN compound ELSE compound
   93 conditional_single: IF . L_PAREN expression R_PAREN compound

    L_PAREN  shift, and go to state 153


State 123

   96 single_while: WHILE . L_PAREN expression R_PAREN compound

    L_PAREN  shift, and go to state 154


State 124

   97 do_while: DO . compound WHILE L_PAREN expression R_PAREN SEMICOLON

    L_CURLY  shift, and go to state 92

    compound  go to state 155


State 125

   98 for: FOR . L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN compound

    L_PAREN  shift, and go to state 156


State 126

  108 jump: RETURN . expression SEMICOLON

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 157


State 127

  109 jump: BREAK . SEMICOLON

    SEMICOLON  shift, and go to state 158


State 128

  110 jump: CONTINUE . SEMICOLON

    SEMICOLON  shift, and go to state 159


State 129

   59 compound_content: var_decl . compound_content

    ID        shift, and go to state 16
    INT       shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    CONST     shift, and go to state 7
    PRINT     shift, and go to state 120
    READ      shift, and go to state 121
    IF        shift, and go to state 122
    WHILE     shift, and go to state 123
    DO        shift, and go to state 124
    FOR       shift, and go to state 125
    RETURN    shift, and go to state 126
    BREAK     shift, and go to state 127
    CONTINUE  shift, and go to state 128
    L_CURLY   shift, and go to state 92

    $default  reduce using rule 62 (compound_content)

    var_decl            go to state 129
    type                go to state 130
    identifier          go to state 131
    const_decl          go to state 132
    statement           go to state 133
    compound            go to state 134
    compound_content    go to state 160
    simple              go to state 136
    variable_reference  go to state 137
    array_ref           go to state 55
    conditional         go to state 138
    conditional_pair    go to state 139
    conditional_single  go to state 140
    while               go to state 141
    single_while        go to state 142
    do_while            go to state 143
    for                 go to state 144
    jump                go to state 145
    procedure           go to state 146


State 130

   18 var_decl: type . identifier_list SEMICOLON

    ID  shift, and go to state 23

    identifier_list  go to state 24
    identifier       go to state 88
    array            go to state 26


State 131

   66 variable_reference: identifier .
   68 array_ref: identifier . array_ref_idx
  111 procedure: identifier . L_PAREN expression_list R_PAREN SEMICOLON

    L_SQUARE  shift, and go to state 70
    L_PAREN   shift, and go to state 161

    $default  reduce using rule 66 (variable_reference)

    array_ref_idx  go to state 71


State 132

   60 compound_content: const_decl . compound_content

    ID        shift, and go to state 16
    INT       shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    CONST     shift, and go to state 7
    PRINT     shift, and go to state 120
    READ      shift, and go to state 121
    IF        shift, and go to state 122
    WHILE     shift, and go to state 123
    DO        shift, and go to state 124
    FOR       shift, and go to state 125
    RETURN    shift, and go to state 126
    BREAK     shift, and go to state 127
    CONTINUE  shift, and go to state 128
    L_CURLY   shift, and go to state 92

    $default  reduce using rule 62 (compound_content)

    var_decl            go to state 129
    type                go to state 130
    identifier          go to state 131
    const_decl          go to state 132
    statement           go to state 133
    compound            go to state 134
    compound_content    go to state 162
    simple              go to state 136
    variable_reference  go to state 137
    array_ref           go to state 55
    conditional         go to state 138
    conditional_pair    go to state 139
    conditional_single  go to state 140
    while               go to state 141
    single_while        go to state 142
    do_while            go to state 143
    for                 go to state 144
    jump                go to state 145
    procedure           go to state 146


State 133

   61 compound_content: statement . compound_content

    ID        shift, and go to state 16
    INT       shift, and go to state 2
    DOUBLE    shift, and go to state 3
    FLOAT     shift, and go to state 4
    STRING    shift, and go to state 5
    BOOL      shift, and go to state 6
    CONST     shift, and go to state 7
    PRINT     shift, and go to state 120
    READ      shift, and go to state 121
    IF        shift, and go to state 122
    WHILE     shift, and go to state 123
    DO        shift, and go to state 124
    FOR       shift, and go to state 125
    RETURN    shift, and go to state 126
    BREAK     shift, and go to state 127
    CONTINUE  shift, and go to state 128
    L_CURLY   shift, and go to state 92

    $default  reduce using rule 62 (compound_content)

    var_decl            go to state 129
    type                go to state 130
    identifier          go to state 131
    const_decl          go to state 132
    statement           go to state 133
    compound            go to state 134
    compound_content    go to state 163
    simple              go to state 136
    variable_reference  go to state 137
    array_ref           go to state 55
    conditional         go to state 138
    conditional_pair    go to state 139
    conditional_single  go to state 140
    while               go to state 141
    single_while        go to state 142
    do_while            go to state 143
    for                 go to state 144
    jump                go to state 145
    procedure           go to state 146


State 134

   51 statement: compound .

    $default  reduce using rule 51 (statement)


State 135

   58 compound: L_CURLY compound_content . R_CURLY

    R_CURLY  shift, and go to state 164


State 136

   52 statement: simple .

    $default  reduce using rule 52 (statement)


State 137

   63 simple: variable_reference . EQUAL expression SEMICOLON

    EQUAL  shift, and go to state 165


State 138

   53 statement: conditional .

    $default  reduce using rule 53 (statement)


State 139

   90 conditional: conditional_pair .

    $default  reduce using rule 90 (conditional)


State 140

   91 conditional: conditional_single .

    $default  reduce using rule 91 (conditional)


State 141

   54 statement: while .

    $default  reduce using rule 54 (statement)


State 142

   94 while: single_while .

    $default  reduce using rule 94 (while)


State 143

   95 while: do_while .

    $default  reduce using rule 95 (while)


State 144

   55 statement: for .

    $default  reduce using rule 55 (statement)


State 145

   56 statement: jump .

    $default  reduce using rule 56 (statement)


State 146

   57 statement: procedure .

    $default  reduce using rule 57 (statement)


State 147

   14 arguments_append: COMMA arguments .

    $default  reduce using rule 14 (arguments_append)


State 148

   44 const_list_append: COMMA const_list .

    $default  reduce using rule 44 (const_list_append)


State 149

   69 array_ref_idx: L_SQUARE expression R_SQUARE . array_ref_idx_append

    L_SQUARE  shift, and go to state 70

    $default  reduce using rule 71 (array_ref_idx_append)

    array_ref_idx         go to state 166
    array_ref_idx_append  go to state 167


State 150

   40 expression_list_append: COMMA expression . expression_list_append
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    COMMA  shift, and go to state 118
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 41 (expression_list_append)

    expression_list_append  go to state 168


State 151

   64 simple: PRINT expression . SEMICOLON
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    SEMICOLON  shift, and go to state 169
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    ST         shift, and go to state 77
    SE         shift, and go to state 78
    EQ         shift, and go to state 79
    GE         shift, and go to state 80
    GT         shift, and go to state 81
    NEQ        shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84
    OR         shift, and go to state 85


State 152

   65 simple: READ variable_reference . SEMICOLON

    SEMICOLON  shift, and go to state 170


State 153

   92 conditional_pair: IF L_PAREN . expression R_PAREN compound ELSE compound
   93 conditional_single: IF L_PAREN . expression R_PAREN compound

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 171


State 154

   96 single_while: WHILE L_PAREN . expression R_PAREN compound

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 172


State 155

   97 do_while: DO compound . WHILE L_PAREN expression R_PAREN SEMICOLON

    WHILE  shift, and go to state 173


State 156

   98 for: FOR L_PAREN . for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN compound

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    $default  reduce using rule 101 (for_init_expr)

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 174
    for_init_expr       go to state 175


State 157

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  108 jump: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 176
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    ST         shift, and go to state 77
    SE         shift, and go to state 78
    EQ         shift, and go to state 79
    GE         shift, and go to state 80
    GT         shift, and go to state 81
    NEQ        shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84
    OR         shift, and go to state 85


State 158

  109 jump: BREAK SEMICOLON .

    $default  reduce using rule 109 (jump)


State 159

  110 jump: CONTINUE SEMICOLON .

    $default  reduce using rule 110 (jump)


State 160

   59 compound_content: var_decl compound_content .

    $default  reduce using rule 59 (compound_content)


State 161

  111 procedure: identifier L_PAREN . expression_list R_PAREN SEMICOLON

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    $default  reduce using rule 39 (expression_list)

    identifier          go to state 52
    expression_list     go to state 177
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 90


State 162

   60 compound_content: const_decl compound_content .

    $default  reduce using rule 60 (compound_content)


State 163

   61 compound_content: statement compound_content .

    $default  reduce using rule 61 (compound_content)


State 164

   58 compound: L_CURLY compound_content R_CURLY .

    $default  reduce using rule 58 (compound)


State 165

   63 simple: variable_reference EQUAL . expression SEMICOLON

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 178


State 166

   70 array_ref_idx_append: array_ref_idx .

    $default  reduce using rule 70 (array_ref_idx_append)


State 167

   69 array_ref_idx: L_SQUARE expression R_SQUARE array_ref_idx_append .

    $default  reduce using rule 69 (array_ref_idx)


State 168

   40 expression_list_append: COMMA expression expression_list_append .

    $default  reduce using rule 40 (expression_list_append)


State 169

   64 simple: PRINT expression SEMICOLON .

    $default  reduce using rule 64 (simple)


State 170

   65 simple: READ variable_reference SEMICOLON .

    $default  reduce using rule 65 (simple)


State 171

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   92 conditional_pair: IF L_PAREN expression . R_PAREN compound ELSE compound
   93 conditional_single: IF L_PAREN expression . R_PAREN compound

    R_PAREN  shift, and go to state 179
    MULT     shift, and go to state 72
    DIV      shift, and go to state 73
    MOD      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    ST       shift, and go to state 77
    SE       shift, and go to state 78
    EQ       shift, and go to state 79
    GE       shift, and go to state 80
    GT       shift, and go to state 81
    NEQ      shift, and go to state 82
    NOT      shift, and go to state 83
    AND      shift, and go to state 84
    OR       shift, and go to state 85


State 172

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   96 single_while: WHILE L_PAREN expression . R_PAREN compound

    R_PAREN  shift, and go to state 180
    MULT     shift, and go to state 72
    DIV      shift, and go to state 73
    MOD      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    ST       shift, and go to state 77
    SE       shift, and go to state 78
    EQ       shift, and go to state 79
    GE       shift, and go to state 80
    GT       shift, and go to state 81
    NEQ      shift, and go to state 82
    NOT      shift, and go to state 83
    AND      shift, and go to state 84
    OR       shift, and go to state 85


State 173

   97 do_while: DO compound WHILE . L_PAREN expression R_PAREN SEMICOLON

    L_PAREN  shift, and go to state 181


State 174

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   99 for_init_expr: expression .
  100              | expression . EQUAL expression

    EQUAL  shift, and go to state 182
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 99 (for_init_expr)


State 175

   98 for: FOR L_PAREN for_init_expr . SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN compound

    SEMICOLON  shift, and go to state 183


State 176

  108 jump: RETURN expression SEMICOLON .

    $default  reduce using rule 108 (jump)


State 177

  111 procedure: identifier L_PAREN expression_list . R_PAREN SEMICOLON

    R_PAREN  shift, and go to state 184


State 178

   63 simple: variable_reference EQUAL expression . SEMICOLON
   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression

    SEMICOLON  shift, and go to state 185
    MULT       shift, and go to state 72
    DIV        shift, and go to state 73
    MOD        shift, and go to state 74
    PLUS       shift, and go to state 75
    MINUS      shift, and go to state 76
    ST         shift, and go to state 77
    SE         shift, and go to state 78
    EQ         shift, and go to state 79
    GE         shift, and go to state 80
    GT         shift, and go to state 81
    NEQ        shift, and go to state 82
    NOT        shift, and go to state 83
    AND        shift, and go to state 84
    OR         shift, and go to state 85


State 179

   92 conditional_pair: IF L_PAREN expression R_PAREN . compound ELSE compound
   93 conditional_single: IF L_PAREN expression R_PAREN . compound

    L_CURLY  shift, and go to state 92

    compound  go to state 186


State 180

   96 single_while: WHILE L_PAREN expression R_PAREN . compound

    L_CURLY  shift, and go to state 92

    compound  go to state 187


State 181

   97 do_while: DO compound WHILE L_PAREN . expression R_PAREN SEMICOLON

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 188


State 182

  100 for_init_expr: expression EQUAL . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 189


State 183

   98 for: FOR L_PAREN for_init_expr SEMICOLON . for_control_expr SEMICOLON for_incre_expr R_PAREN compound

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    $default  reduce using rule 104 (for_control_expr)

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 190
    for_control_expr    go to state 191


State 184

  111 procedure: identifier L_PAREN expression_list R_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 192


State 185

   63 simple: variable_reference EQUAL expression SEMICOLON .

    $default  reduce using rule 63 (simple)


State 186

   92 conditional_pair: IF L_PAREN expression R_PAREN compound . ELSE compound
   93 conditional_single: IF L_PAREN expression R_PAREN compound .

    ELSE  shift, and go to state 193

    $default  reduce using rule 93 (conditional_single)


State 187

   96 single_while: WHILE L_PAREN expression R_PAREN compound .

    $default  reduce using rule 96 (single_while)


State 188

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
   97 do_while: DO compound WHILE L_PAREN expression . R_PAREN SEMICOLON

    R_PAREN  shift, and go to state 194
    MULT     shift, and go to state 72
    DIV      shift, and go to state 73
    MOD      shift, and go to state 74
    PLUS     shift, and go to state 75
    MINUS    shift, and go to state 76
    ST       shift, and go to state 77
    SE       shift, and go to state 78
    EQ       shift, and go to state 79
    GE       shift, and go to state 80
    GT       shift, and go to state 81
    NEQ      shift, and go to state 82
    NOT      shift, and go to state 83
    AND      shift, and go to state 84
    OR       shift, and go to state 85


State 189

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  100 for_init_expr: expression EQUAL expression .

    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 100 (for_init_expr)


State 190

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  102 for_control_expr: expression .
  103                 | expression . EQUAL expression

    EQUAL  shift, and go to state 195
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 102 (for_control_expr)


State 191

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr . SEMICOLON for_incre_expr R_PAREN compound

    SEMICOLON  shift, and go to state 196


State 192

  111 procedure: identifier L_PAREN expression_list R_PAREN SEMICOLON .

    $default  reduce using rule 111 (procedure)


State 193

   92 conditional_pair: IF L_PAREN expression R_PAREN compound ELSE . compound

    L_CURLY  shift, and go to state 92

    compound  go to state 197


State 194

   97 do_while: DO compound WHILE L_PAREN expression R_PAREN . SEMICOLON

    SEMICOLON  shift, and go to state 198


State 195

  103 for_control_expr: expression EQUAL . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 199


State 196

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON . for_incre_expr R_PAREN compound

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    $default  reduce using rule 107 (for_incre_expr)

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 200
    for_incre_expr      go to state 201


State 197

   92 conditional_pair: IF L_PAREN expression R_PAREN compound ELSE compound .

    $default  reduce using rule 92 (conditional_pair)


State 198

   97 do_while: DO compound WHILE L_PAREN expression R_PAREN SEMICOLON .

    $default  reduce using rule 97 (do_while)


State 199

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  103 for_control_expr: expression EQUAL expression .

    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 103 (for_control_expr)


State 200

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  105 for_incre_expr: expression .
  106               | expression . EQUAL expression

    EQUAL  shift, and go to state 202
    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 105 (for_incre_expr)


State 201

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr . R_PAREN compound

    R_PAREN  shift, and go to state 203


State 202

  106 for_incre_expr: expression EQUAL . expression

    ID            shift, and go to state 16
    INT_CONST     shift, and go to state 45
    FLOAT_CONST   shift, and go to state 46
    DOUBLE_CONST  shift, and go to state 47
    STRING_CONST  shift, and go to state 48
    BOOL_CONST    shift, and go to state 49
    L_PAREN       shift, and go to state 50
    MINUS         shift, and go to state 51

    identifier          go to state 52
    literal_const       go to state 53
    variable_reference  go to state 54
    array_ref           go to state 55
    expression          go to state 204


State 203

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN . compound

    L_CURLY  shift, and go to state 92

    compound  go to state 205


State 204

   75 expression: expression . MULT expression
   76           | expression . DIV expression
   77           | expression . MOD expression
   78           | expression . PLUS expression
   79           | expression . MINUS expression
   80           | expression . ST expression
   81           | expression . SE expression
   82           | expression . EQ expression
   83           | expression . GE expression
   84           | expression . GT expression
   85           | expression . NEQ expression
   86           | expression . NOT expression
   87           | expression . AND expression
   88           | expression . OR expression
  106 for_incre_expr: expression EQUAL expression .

    MULT   shift, and go to state 72
    DIV    shift, and go to state 73
    MOD    shift, and go to state 74
    PLUS   shift, and go to state 75
    MINUS  shift, and go to state 76
    ST     shift, and go to state 77
    SE     shift, and go to state 78
    EQ     shift, and go to state 79
    GE     shift, and go to state 80
    GT     shift, and go to state 81
    NEQ    shift, and go to state 82
    NOT    shift, and go to state 83
    AND    shift, and go to state 84
    OR     shift, and go to state 85

    $default  reduce using rule 106 (for_incre_expr)


State 205

   98 for: FOR L_PAREN for_init_expr SEMICOLON for_control_expr SEMICOLON for_incre_expr R_PAREN compound .

    $default  reduce using rule 98 (for)
